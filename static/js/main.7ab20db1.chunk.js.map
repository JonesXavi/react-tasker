{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","timeSlotSizeMinutes","onConfirm","Button","color","onClick","style","backgroundColor","defaultProps","Header","title","onToggle","showAdd","Task","task","onDelete","onDoubleClick","id","cursor","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","headers","useEffect","a","fetch","res","json","data","fetchTasks","addTask","toDateString","toLocaleTimeString","method","body","JSON","stringify","deleteTask","filter","fetchTask","toggleReminder","taskToToggle","updatedTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ab20db1.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport DayTimePicker from '@mooncake-dev/react-day-time-picker';\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!text) {\r\n            alert('Add a task');\r\n            return;\r\n        }\r\n\r\n        onAdd({text, day, reminder});\r\n\r\n        setText('');\r\n        setDay('');\r\n        setReminder(false);\r\n    }\r\n\r\n    const onChange = (value) => {\r\n        setDay(value);\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'  value={reminder} checked={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <DayTimePicker timeSlotSizeMinutes={15} onConfirm={onChange} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'blue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onToggle, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red':'green'} text={showAdd ? 'Close':'Add'} onClick={onToggle} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Tasker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={() => onToggle(task.id)} >\r\n            <h3>{task.text} \r\n            <FaTimes style={{color: 'red', cursor: 'pointer'}} \r\n                onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {\r\n                tasks.map((task) => (\r\n                    <Task onToggle={onToggle} onDelete={onDelete} key={task.id} task={task} />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] =  useState(false);\n  const [tasks, setTasks] = useState([]);\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Accept': 'application/json;odata.metadata=full',\n    'Content-type': 'application/json'\n  };\n\n  useEffect(() => {\n    //Fetch the tasks from db.json\n    const fetchTasks = async () => {\n      const res = await fetch('https://my-json-server.typicode.com/jonesxavi/react-tasker/tasks', {\n        headers: headers\n      });\n      const data = await res.json();\n\n      setTasks(data);\n    }\n\n    fetchTasks();\n  }, []);\n\n  const addTask = async(task) => {\n    task.day = `${task.day.toDateString()} ${task.day.toLocaleTimeString()}`;\n    \n    const res = await fetch('https://my-json-server.typicode.com/jonesxavi/react-tasker/tasks/', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n    setShowAddTask(!showAddTask);\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`https://my-json-server.typicode.com/jonesxavi/react-tasker/tasks/${id}`, {\n      method: 'DELETE',\n      headers: headers\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  //Fetch a single task\n  const fetchTask = async (id) => {\n    const res = await fetch(`https://my-json-server.typicode.com/jonesxavi/react-tasker/tasks/${id}`, {\n      headers: headers\n    });\n    return await res.json();\n  }\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder};\n\n    const res = await fetch(`https://my-json-server.typicode.com/jonesxavi/react-tasker/tasks/${id}`, {\n      method: 'PUT',\n      headers: headers,\n      body: JSON.stringify(updatedTask)\n    })\n\n    const data = await res.json();\n\n    setTasks(tasks.map((task) =>\n      task.id === id ? {...task, reminder: data.reminder} : task\n    ));\n  }\n\n  const toggleAddTask = () => {\n    setShowAddTask(!showAddTask);\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onToggle={toggleAddTask} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {\n        tasks.length > 0 ?\n          (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n          ) : (\n            'No Tasks To Show'\n          )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}